name: on-premise-cicd
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tags:
        description: 'Set Tags Name'
        required: true
        default: main
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      release: ${{ steps.set-version.outputs.VERSION_NAME }}
    steps:
      - id: set-version
        run: |
          echo "VERSION_NAME=$(echo "${{ github.event.inputs.tags }}" | sed "s/\./\-/g")" >> $GITHUB_OUTPUT
      - name: Check Version Name
        run: |
          echo "Check Version -> ${{ steps.set-version.outputs.VERSION_NAME }}"
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.inputs.tags }}'
      - name: Grant execute permission for gradlew
        run: chmod +w gradlew
      - name: Setup JDk 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'corretto'
      - name: Build with Gradlew
        run: ./gradlew clean test bootJar
      - name: Add version
        run: |
          mv build/libs/cicd-study-0.0.1-SNAPSHOT.jar build/libs/cicd-study-${{ steps.set-version.outputs.VERSION_NAME }}.jar
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: cicd-study-application
          path: build/libs/cicd-study-${{ steps.set-version.outputs.VERSION_NAME }}.jar
  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: cicd-study-application
          path: build/libs/
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          
          echo "rsync transfer start"
          rsync -avz -e "ssh -i private_key.pem -o StrictHostKeyChecking=no" build/libs/cicd-study-${{ needs.build.outputs.release }}.jar ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER_NAME }}/
          echo "rsync transfer completed"
          
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }} << 'ENDSSH'
          if pgrep -f 'java -jar'; then
          pkill -f 'java -jar'
          echo "Java process killed"
          else
          echo "No Java process found"
          fi
          nohup java -jar /home/${{ secrets.EC2_USER_NAME }}/cicd-study-${{ needs.build.outputs.release }}.jar > app.log 2>&1 &
          echo "New Java process started"
          ENDSSH
          echo "deploy completed"
          
          
          rm -f private_key.pem